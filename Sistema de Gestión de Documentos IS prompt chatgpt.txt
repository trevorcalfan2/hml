PROYECTO DE SISTEMA DE GESTIÓN DOCUMENTAL ISO (Laravel, Bootstrap)

[RESUMEN GENERAL]
- El sistema gestiona documentos ISO (políticas, procedimientos, instructivos, formatos, registros) para una organización.
- Utiliza Laravel (PHP), Bootstrap, estructura de roles (asistente, jefe/coordinador, superadmin).
- Flujo basado en gestión de documentos, estados, aprobaciones, historial y control automatizado de registros.

[REQUERIMIENTOS PRINCIPALES]
1. CRUD de documentos ISO.
2. Soporte para tipos de documento (“doctype”): Política, Procedimiento, Instructivo, Formato, Registro.
3. Flujos de aprobación, revisión, observación, con historial de versiones y logs de actividad.
4. Control de usuarios por rol y privilegios:
   - Asistente: sube y gestiona documentos.
   - Jefe/Coordinador: revisa, observa o aprueba.
   - Superadmin: acceso total.
5. Subida de archivos PDF/DOC/DOCX asociados a cada documento/version.
6. Gestión y visualización del historial de versiones, logs, responsables y aprobadores.

[REGISTRO Y FRECUENCIA (REQUISITO CLAVE PARA “REGISTRO”)]
- El doctype “REGISTRO” requiere campos obligatorios: año, mes y frecuencia (Mensual, Trimestral, Semestral, Anual).
- Otros doctypes no usan estos campos (serán NULL o inactivos).
- Frecuencia determina cuándo corresponde subir un nuevo registro/documento (ej: cada mes, cada trimestre).
- Hay una tabla adicional `documento_iso_registro` que almacena los envíos de registros (documento_iso_id, anio, mes, frecuencia, archivo, comentario, responsable_id, estado, fecha_registro).
- El sistema debe controlar automáticamente si falta un registro para un periodo, marcando “FALTA” y notificando (idealmente por background job).
- Solo registros en estado “APROBADO” cuentan como cumplidos para la frecuencia y el periodo. Si se observa o no aprueba, se sigue marcando “FALTA” hasta que el registro sea válido.
- Si un registro se sube fuera de tiempo, se marca como “REGISTRADO”, pero puede tener estado “FALTA” si es observado/no aprobado en tiempo.
- La edición manual de año/mes/frecuencia debe ser limitada o auditada para evitar inconsistencias.

[OTROS DOCTYPES]
- Para políticas, instructivos, formatos, etc. el flujo es más manual y no requiere control automático de frecuencia.
- Su actualización se da solo cuando hay cambios; no hay validación periódica, año ni frecuencia.

[APROBACIÓN Y FLUJOS]
- Documentos pasan por los estados: EN REVISIÓN, OBSERVADO, VIGENTE, APROBADO, FALTA, OBSOLETO.
- Asistente sube nueva versión → jefe/coordinador revisa (puede aprobar u observar).
- Observaciones requieren que el responsable suba una nueva versión.
- El historial y los logs de actividad deben ser claros, mostrar quién, cuándo y qué acción realizó, con roles, nombre y ID.

[INTERFAZ Y USABILIDAD]
- Historial de versiones y logs deben ser visualmente claros, con colores bien contrastados (fondos oscuros, textos blancos para VIGENTE).
- Mostrar la ruta del archivo, usuario que realizó la acción, roles, ID, etc.
- Validar dinámicamente los campos de registro en el frontend: si el doctype es “REGISTRO”, los campos año, mes y frecuencia deben ser obligatorios.
- El sistema debe mostrar faltas o pendientes en dashboard y notificaciones, tanto en escritorio como en vistas del usuario (campanita, barra lateral, etc.).

[ESTÁNDARES ISO]
- El sistema debe mantener inmutabilidad en la historia de cambios y versiones (no se borra historial ni logs).
- No se debe eliminar usuarios sin considerar impacto en la trazabilidad histórica.
- Los cambios en frecuencia o periodo deben ser auditados (no se recomienda cambiar frecuencias a mitad de periodo sin justificación y registro).
- Cumplir con el principio de “trazabilidad y evidencia de gestión documental”.

[BASES DE DATOS]
- Tablas: documento_iso, documento_iso_registro, documento_iso_versions, documento_iso_logs, admins, roles, areas, process, doctype.
- Revisar los campos unsigned/bigint para claves foráneas (ejemplo, admins.id es unsigned).

[CONSIDERACIONES DE AUTOMATIZACIÓN]
- Es preferible automatizar el control de faltas mediante jobs en background (Artisan Scheduler) y enviar notificaciones.
- El dashboard debe ser capaz de mostrar faltantes/pendientes de manera clara, por frecuencia, área, responsable, etc.

[RECOMENDACIONES]
- Si necesitas adaptar esto a un nuevo asistente/chat, indica el ID del doctype “REGISTRO” real, y revisa los nombres de tabla/campo.
- Sigue los principios ISO de inmutabilidad, trazabilidad y control documental en todo el flujo.

[FIN DEL PROMPT]
